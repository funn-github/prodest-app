import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { app, database } from '../firebaseConfig'
import { collection, addDoc, getDocs, doc, updateDoc, deleteDoc } from 'firebase/firestore'
import { useEffect } from 'react'
import { useRouter } from 'next/router'
import { useState } from 'react'



export default function Home() {
  const [name, setName] = useState('')
  const [age, setAge] = useState('')
  const [ID, setID] = useState(null)

  const [fireData, setFireData] = useState([])

  const [isUpdate, setIsUpdate] = useState(false)

  const databaseRef = collection(database, 'CRUD data')


  let router = useRouter()

  useEffect(() => {
    let token = sessionStorage.getItem('Token')
    if(token){
      getData()
    }
    if (!token){
        router.push('/register')
    }
}, [])


  const addData = () => {

    addDoc(databaseRef, {
        name: name,
        age: age
    }).then(() => {
      alert('data sent')
      getData()
      setName('')
      setAge('')
    }).catch((err) => {
      console.error(err)
      console.log('uh oj')
    })

  }

  const getData = async () => {
     await getDocs(databaseRef)
     .then((response) => {
       setFireData(response.docs.map((data) => {
         return {...data.data(), id: data.id}
       }))
     })
  }

  const getID = (id, name, age) => {

    setID(id)
    setName(name)
    setAge(age)
    setIsUpdate(true)




  }

  const updateFields = () => {
    let fieldToEdit = doc(database, 'CRUD data', ID)

    updateDoc(fieldToEdit, {
      name: name,
      age: age
    }).then(() => {
      alert('data updaed')
      getData()
      setName('')
      setAge('')
      setIsUpdate(false)
    }).catch((err) => {
      console.log(err)
    })


  }

  const deleteDocument = (id) => {
    let fieldToEdit = doc(database, 'CRUD data', id)
    deleteDoc(fieldToEdit).then(() => {
      alert('data delted')
      getData()
    }).catch((err) => {
      alert('uh oh cant delte')
    })
  }

  const logout = () => {
    sessionStorage.removeItem('Token')
    router.push('/register')
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>very cool firebase next</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div>
          <button className={styles.button} onClick={logout}>logout</button>
        </div>
        <h1>home</h1> 

        <input placeholder='name' value={name} className={styles.inputBox} onChange={event => setName(event.target.value)} />
        <input placeholder='age' value={age} className={styles.inputBox} onChange={event => setAge(event.target.value)} />

        {isUpdate ? (
                  <button className={styles.button} onClick={updateFields}>update</button>

        ) : (
          <button className={styles.button} onClick={addData}>add</button>

        )}


        <div>
          {fireData.map((data) => {
            return(
              <div className={styles.flex}>
                <h1>{data.name}</h1>
                <h1>{data.age}</h1>
                <button className={styles.button} onClick={() => getID(data.id, data.name, data.age)}>update</button>
                <button className={styles.button} onClick={() => deleteDocument(data.id)}>delete</button>
              </div>
            )
          })}
        </div>
      </main>


    </div>
  )
}
